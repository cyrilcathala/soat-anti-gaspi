name: Build App

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
defaults:
 run:
  working-directory: ./src

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
    - name: Run Docker Compose
      run: docker compose up -d
    - name: Wait for database to be up...
      run: wget -qO- https://raw.githubusercontent.com/eficode/wait-for/$WAIT_FOR_VERSION/wait-for | sh -s -- localhost:5432 -- echo "Database is up"
      env:
        WAIT_FOR_VERSION: 4df3f9262d84cab0039c07bf861045fbb3c20ab7 # v2.2.3
    - name: Run Database Migration
      run: |
        cd Soat.AntiGaspi.Api
        dotnet tool install --global dotnet-ef
        dotnet ef database update
    - name: Test
      run: dotnet test --no-build --verbosity normal
